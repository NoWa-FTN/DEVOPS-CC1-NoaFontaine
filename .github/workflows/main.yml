name: CI - Lint & Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Checkout du code source
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Version Node.js

      # Étape 3: Afficher la version npm (utile pour débogage)
      - name: Show npm version
        run: npm -v

      # Étape 4: Installer les dépendances
      - name: Install dependencies (force clean install)
        run: npm ci

      # Étape 5: S'assurer que 'eslint-plugin-vitest' et 'eslint-plugin-testing-library' sont installés
      - name: Install eslint plugins
        run: npm install eslint-plugin-vitest eslint-plugin-testing-library --save-dev

      # Étape 6: Run ESLint
      - name: Run ESLint
        run: npm run lint

      # Étape 7: Run tests et générer un rapport au format JSON
      - name: Run tests and generate JSON report
        run: npm test -- --reporter json > result.json  # Exécute les tests et enregistre les résultats dans result.json

      # Étape 8: Afficher le contenu du fichier JSON pour débogage
      - name: Display JSON content
        run: cat result.json

      # Étape 9: Extraire les résultats des tests et les insérer dans le README.md
      - name: Update README with test results
        run: |
          # Si la structure du fichier JSON est correcte, utiliser cette ligne pour extraire les résultats des tests
          TEST_RESULTS=$(cat result.json | jq '.results | map(.title) | join(", ")')  # Extrait les titres des tests depuis le fichier JSON
          
          # Si la structure du fichier est différente, ajustez la commande jq en fonction du contenu de result.json
          # Par exemple, si les tests sont sous une autre clé : 
          # TEST_RESULTS=$(cat result.json | jq '.tests.testSuite1 | map(.name) | join(", ")')
          
          echo "Test results: $TEST_RESULTS"  # Affiche les résultats des tests pour débogage
          
          # Remplace <!-- TEST RESULTS --> dans README.md par les résultats
          sed -i "s|<!-- TEST RESULTS -->|Résultats des tests: $TEST_RESULTS|" README.md  

      # Étape 10: Commit et push des modifications du README
      - name: Commit and push changes to README
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add README.md
          git commit -m "Mettre à jour README avec les résultats des tests"
          git push
